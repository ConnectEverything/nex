# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Lint | Test | Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GO_VER: '1.22.4'


jobs:
  lint:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
    - 
      uses: actions/checkout@v4
    - 
      name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VER }}
        cache: false
    - 
      name: golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: v1.54

  test:
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
    - 
      uses: actions/checkout@v4
    - 
      name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VER }}
    - 
      name: Build agent
      working-directory: ./agent/cmd/nex-agent
      run: go build -tags netgo -ldflags '-extldflags "-static"'
    - 
      name: Build plugin fixture
      working-directory: ./examples/workload_provider_plugins/noop/
      run: |
        go build
        mv noop.* ../../../test/fixtures/
    - 
      name: Run test suite
      working-directory: .
      if: runner.os == 'Linux'
      run: |
        go test $(go list ./... | grep -v spec)
        go test -v -race $(go list ./... | grep -v spec)
    - 
      name: Run spec suite | Linux
      working-directory: .
      if: runner.os == 'Linux'
      run: |
        go install github.com/onsi/ginkgo/v2/ginkgo@v2.19.0
        go mod tidy
        sudo $(go env GOPATH)/bin/ginkgo -r --randomize-all --randomize-suites --vv --trace --keep-going --output-interceptor-mode=none ./spec
    - 
      name: Run spec suite | Windows
      working-directory: .
      if: runner.os == 'Windows'
      run: |
        go install github.com/onsi/ginkgo/v2/ginkgo@v2.19.0
        go mod tidy
        go run github.com/onsi/ginkgo/v2/ginkgo -r --randomize-all --randomize-suites --flake-attempts=5 --vv --trace --keep-going --output-interceptor-mode=none ./spec
    - 
      name: Run spec suite | Darwin
      working-directory: .
      if: runner.os == 'macOS'
      run: |
        go install github.com/onsi/ginkgo/v2/ginkgo@v2.19.0
        go mod tidy
        sudo $(go env GOPATH)/bin/ginkgo -r --randomize-all --randomize-suites --vv --trace --keep-going --output-interceptor-mode=none ./spec

  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VER }}
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: build --clean --snapshot

