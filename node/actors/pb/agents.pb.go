// Message definitions for communciation with and between agent actors
// This is NOT the API definition for host services or the internal NATS server agent comms
// protocol.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: agents.proto

package actorproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Probably not going to be used. Placeholder to get at least one field until we
// fill out the other structs
type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Ping) Reset() {
	*x = Ping{}
	mi := &file_agents_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_agents_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_agents_proto_rawDescGZIP(), []int{0}
}

func (x *Ping) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Sent by the control API actor to an agent actor to request a workload be started
type StartWorkload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Argv              []string            `protobuf:"bytes,1,rep,name=argv,proto3" json:"argv,omitempty"`
	Description       string              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Environment       string              `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	Essential         bool                `protobuf:"varint,4,opt,name=essential,proto3" json:"essential,omitempty"`
	Hash              string              `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	HostServiceConfig *HostServicesConfig `protobuf:"bytes,6,opt,name=host_service_config,json=hostServiceConfig,proto3" json:"host_service_config,omitempty"`
	Jsdomain          string              `protobuf:"bytes,7,opt,name=jsdomain,proto3" json:"jsdomain,omitempty"`
	RetriedAt         string              `protobuf:"bytes,8,opt,name=retried_at,json=retriedAt,proto3" json:"retried_at,omitempty"`
	RetryCount        int32               `protobuf:"varint,9,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	SenderPublicKey   string              `protobuf:"bytes,10,opt,name=sender_public_key,json=senderPublicKey,proto3" json:"sender_public_key,omitempty"`
	TargetNode        string              `protobuf:"bytes,11,opt,name=target_node,json=targetNode,proto3" json:"target_node,omitempty"`
	TriggerSubjects   []string            `protobuf:"bytes,12,rep,name=trigger_subjects,json=triggerSubjects,proto3" json:"trigger_subjects,omitempty"`
	Uri               string              `protobuf:"bytes,13,opt,name=uri,proto3" json:"uri,omitempty"`
	WorkloadJwt       string              `protobuf:"bytes,14,opt,name=workload_jwt,json=workloadJwt,proto3" json:"workload_jwt,omitempty"`
	WorkloadName      string              `protobuf:"bytes,15,opt,name=workload_name,json=workloadName,proto3" json:"workload_name,omitempty"`
	WorkloadType      string              `protobuf:"bytes,16,opt,name=workload_type,json=workloadType,proto3" json:"workload_type,omitempty"`
}

func (x *StartWorkload) Reset() {
	*x = StartWorkload{}
	mi := &file_agents_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartWorkload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorkload) ProtoMessage() {}

func (x *StartWorkload) ProtoReflect() protoreflect.Message {
	mi := &file_agents_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorkload.ProtoReflect.Descriptor instead.
func (*StartWorkload) Descriptor() ([]byte, []int) {
	return file_agents_proto_rawDescGZIP(), []int{1}
}

func (x *StartWorkload) GetArgv() []string {
	if x != nil {
		return x.Argv
	}
	return nil
}

func (x *StartWorkload) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StartWorkload) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *StartWorkload) GetEssential() bool {
	if x != nil {
		return x.Essential
	}
	return false
}

func (x *StartWorkload) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *StartWorkload) GetHostServiceConfig() *HostServicesConfig {
	if x != nil {
		return x.HostServiceConfig
	}
	return nil
}

func (x *StartWorkload) GetJsdomain() string {
	if x != nil {
		return x.Jsdomain
	}
	return ""
}

func (x *StartWorkload) GetRetriedAt() string {
	if x != nil {
		return x.RetriedAt
	}
	return ""
}

func (x *StartWorkload) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *StartWorkload) GetSenderPublicKey() string {
	if x != nil {
		return x.SenderPublicKey
	}
	return ""
}

func (x *StartWorkload) GetTargetNode() string {
	if x != nil {
		return x.TargetNode
	}
	return ""
}

func (x *StartWorkload) GetTriggerSubjects() []string {
	if x != nil {
		return x.TriggerSubjects
	}
	return nil
}

func (x *StartWorkload) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *StartWorkload) GetWorkloadJwt() string {
	if x != nil {
		return x.WorkloadJwt
	}
	return ""
}

func (x *StartWorkload) GetWorkloadName() string {
	if x != nil {
		return x.WorkloadName
	}
	return ""
}

func (x *StartWorkload) GetWorkloadType() string {
	if x != nil {
		return x.WorkloadType
	}
	return ""
}

type HostServicesConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NatsUrl      string `protobuf:"bytes,1,opt,name=nats_url,json=natsUrl,proto3" json:"nats_url,omitempty"`
	NatsUserSeed string `protobuf:"bytes,2,opt,name=nats_user_seed,json=natsUserSeed,proto3" json:"nats_user_seed,omitempty"`
	NatsUserJwt  string `protobuf:"bytes,3,opt,name=nats_user_jwt,json=natsUserJwt,proto3" json:"nats_user_jwt,omitempty"`
}

func (x *HostServicesConfig) Reset() {
	*x = HostServicesConfig{}
	mi := &file_agents_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostServicesConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServicesConfig) ProtoMessage() {}

func (x *HostServicesConfig) ProtoReflect() protoreflect.Message {
	mi := &file_agents_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServicesConfig.ProtoReflect.Descriptor instead.
func (*HostServicesConfig) Descriptor() ([]byte, []int) {
	return file_agents_proto_rawDescGZIP(), []int{2}
}

func (x *HostServicesConfig) GetNatsUrl() string {
	if x != nil {
		return x.NatsUrl
	}
	return ""
}

func (x *HostServicesConfig) GetNatsUserSeed() string {
	if x != nil {
		return x.NatsUserSeed
	}
	return ""
}

func (x *HostServicesConfig) GetNatsUserJwt() string {
	if x != nil {
		return x.NatsUserJwt
	}
	return ""
}

// Reply from the agent actor containing the results of the attempt to start a workload
type WorkloadStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Issuer  string `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Started bool   `protobuf:"varint,4,opt,name=started,proto3" json:"started,omitempty"`
}

func (x *WorkloadStarted) Reset() {
	*x = WorkloadStarted{}
	mi := &file_agents_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkloadStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadStarted) ProtoMessage() {}

func (x *WorkloadStarted) ProtoReflect() protoreflect.Message {
	mi := &file_agents_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadStarted.ProtoReflect.Descriptor instead.
func (*WorkloadStarted) Descriptor() ([]byte, []int) {
	return file_agents_proto_rawDescGZIP(), []int{3}
}

func (x *WorkloadStarted) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkloadStarted) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *WorkloadStarted) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkloadStarted) GetStarted() bool {
	if x != nil {
		return x.Started
	}
	return false
}

// Request sent by the control API actor to an agent actor asking to stop a workload
type StopWorkload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId      string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	WorkloadId  string `protobuf:"bytes,2,opt,name=workload_id,json=workloadId,proto3" json:"workload_id,omitempty"`
	WorkloadJwt string `protobuf:"bytes,3,opt,name=workload_jwt,json=workloadJwt,proto3" json:"workload_jwt,omitempty"`
}

func (x *StopWorkload) Reset() {
	*x = StopWorkload{}
	mi := &file_agents_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopWorkload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopWorkload) ProtoMessage() {}

func (x *StopWorkload) ProtoReflect() protoreflect.Message {
	mi := &file_agents_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopWorkload.ProtoReflect.Descriptor instead.
func (*StopWorkload) Descriptor() ([]byte, []int) {
	return file_agents_proto_rawDescGZIP(), []int{4}
}

func (x *StopWorkload) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *StopWorkload) GetWorkloadId() string {
	if x != nil {
		return x.WorkloadId
	}
	return ""
}

func (x *StopWorkload) GetWorkloadJwt() string {
	if x != nil {
		return x.WorkloadJwt
	}
	return ""
}

// Response from the agent actor indicating the results of the workload stop attempt
type WorkloadStopped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Issuer  string `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Stopped bool   `protobuf:"varint,3,opt,name=stopped,proto3" json:"stopped,omitempty"`
}

func (x *WorkloadStopped) Reset() {
	*x = WorkloadStopped{}
	mi := &file_agents_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkloadStopped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadStopped) ProtoMessage() {}

func (x *WorkloadStopped) ProtoReflect() protoreflect.Message {
	mi := &file_agents_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadStopped.ProtoReflect.Descriptor instead.
func (*WorkloadStopped) Descriptor() ([]byte, []int) {
	return file_agents_proto_rawDescGZIP(), []int{5}
}

func (x *WorkloadStopped) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkloadStopped) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *WorkloadStopped) GetStopped() bool {
	if x != nil {
		return x.Stopped
	}
	return false
}

// Asks the target agent for a list of all if its known, running workloads
type QueryWorkloads struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryWorkloads) Reset() {
	*x = QueryWorkloads{}
	mi := &file_agents_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryWorkloads) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryWorkloads) ProtoMessage() {}

func (x *QueryWorkloads) ProtoReflect() protoreflect.Message {
	mi := &file_agents_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryWorkloads.ProtoReflect.Descriptor instead.
func (*QueryWorkloads) Descriptor() ([]byte, []int) {
	return file_agents_proto_rawDescGZIP(), []int{6}
}

type WorkloadList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workloads []*WorkloadSummary `protobuf:"bytes,1,rep,name=workloads,proto3" json:"workloads,omitempty"`
}

func (x *WorkloadList) Reset() {
	*x = WorkloadList{}
	mi := &file_agents_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkloadList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadList) ProtoMessage() {}

func (x *WorkloadList) ProtoReflect() protoreflect.Message {
	mi := &file_agents_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadList.ProtoReflect.Descriptor instead.
func (*WorkloadList) Descriptor() ([]byte, []int) {
	return file_agents_proto_rawDescGZIP(), []int{7}
}

func (x *WorkloadList) GetWorkloads() []*WorkloadSummary {
	if x != nil {
		return x.Workloads
	}
	return nil
}

type GetNodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNodeInfo) Reset() {
	*x = GetNodeInfo{}
	mi := &file_agents_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeInfo) ProtoMessage() {}

func (x *GetNodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_agents_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeInfo.ProtoReflect.Descriptor instead.
func (*GetNodeInfo) Descriptor() ([]byte, []int) {
	return file_agents_proto_rawDescGZIP(), []int{8}
}

type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nexus      string             `protobuf:"bytes,1,opt,name=nexus,proto3" json:"nexus,omitempty"`
	Id         string             `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Tags       map[string]string  `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TargetXkey string             `protobuf:"bytes,4,opt,name=target_xkey,json=targetXkey,proto3" json:"target_xkey,omitempty"`
	Uptime     string             `protobuf:"bytes,5,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Version    string             `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	Workloads  []*WorkloadSummary `protobuf:"bytes,7,rep,name=workloads,proto3" json:"workloads,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	mi := &file_agents_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_agents_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_agents_proto_rawDescGZIP(), []int{9}
}

func (x *NodeInfo) GetNexus() string {
	if x != nil {
		return x.Nexus
	}
	return ""
}

func (x *NodeInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NodeInfo) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *NodeInfo) GetTargetXkey() string {
	if x != nil {
		return x.TargetXkey
	}
	return ""
}

func (x *NodeInfo) GetUptime() string {
	if x != nil {
		return x.Uptime
	}
	return ""
}

func (x *NodeInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NodeInfo) GetWorkloads() []*WorkloadSummary {
	if x != nil {
		return x.Workloads
	}
	return nil
}

type WorkloadSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Runtime      string                 `protobuf:"bytes,3,opt,name=runtime,proto3" json:"runtime,omitempty"`
	StartedAt    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	WorkloadType string                 `protobuf:"bytes,5,opt,name=workload_type,json=workloadType,proto3" json:"workload_type,omitempty"`
}

func (x *WorkloadSummary) Reset() {
	*x = WorkloadSummary{}
	mi := &file_agents_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkloadSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadSummary) ProtoMessage() {}

func (x *WorkloadSummary) ProtoReflect() protoreflect.Message {
	mi := &file_agents_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadSummary.ProtoReflect.Descriptor instead.
func (*WorkloadSummary) Descriptor() ([]byte, []int) {
	return file_agents_proto_rawDescGZIP(), []int{10}
}

func (x *WorkloadSummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkloadSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkloadSummary) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

func (x *WorkloadSummary) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *WorkloadSummary) GetWorkloadType() string {
	if x != nil {
		return x.WorkloadType
	}
	return ""
}

// Request made by the actor system and/or control API asking the agent to stop. Note
// that the direct start agent will ignore this
type Halt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Halt) Reset() {
	*x = Halt{}
	mi := &file_agents_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Halt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Halt) ProtoMessage() {}

func (x *Halt) ProtoReflect() protoreflect.Message {
	mi := &file_agents_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Halt.ProtoReflect.Descriptor instead.
func (*Halt) Descriptor() ([]byte, []int) {
	return file_agents_proto_rawDescGZIP(), []int{11}
}

var File_agents_proto protoreflect.FileDescriptor

var file_agents_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x16, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xb8, 0x04, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x76, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x72, 0x67, 0x76, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x73,
	0x73, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x4a, 0x0a, 0x13, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x21, 0x0a,
	0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6a, 0x77, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x4a, 0x77, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x79, 0x0a, 0x12, 0x48, 0x6f,
	0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x19, 0x0a, 0x08, 0x6e, 0x61, 0x74, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x61, 0x74, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x6e,
	0x61, 0x74, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x61, 0x74, 0x73, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x65,
	0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x61, 0x74, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6a,
	0x77, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x74, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x4a, 0x77, 0x74, 0x22, 0x67, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x22, 0x6b,
	0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6a, 0x77, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x4a, 0x77, 0x74, 0x22, 0x53, 0x0a, 0x0f, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64,
	0x22, 0x10, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x73, 0x22, 0x45, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x09,
	0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa3, 0x02, 0x0a, 0x08, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x78, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x58, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x70,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x35,
	0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xaf,
	0x01, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x77,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x06, 0x0a, 0x04, 0x48, 0x61, 0x6c, 0x74, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x79, 0x6e, 0x61, 0x64, 0x69, 0x61, 0x2d, 0x69,
	0x6f, 0x2f, 0x6e, 0x65, 0x78, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x2f, 0x70, 0x62, 0x3b, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_agents_proto_rawDescOnce sync.Once
	file_agents_proto_rawDescData = file_agents_proto_rawDesc
)

func file_agents_proto_rawDescGZIP() []byte {
	file_agents_proto_rawDescOnce.Do(func() {
		file_agents_proto_rawDescData = protoimpl.X.CompressGZIP(file_agents_proto_rawDescData)
	})
	return file_agents_proto_rawDescData
}

var file_agents_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_agents_proto_goTypes = []any{
	(*Ping)(nil),                  // 0: agents.Ping
	(*StartWorkload)(nil),         // 1: agents.StartWorkload
	(*HostServicesConfig)(nil),    // 2: agents.HostServicesConfig
	(*WorkloadStarted)(nil),       // 3: agents.WorkloadStarted
	(*StopWorkload)(nil),          // 4: agents.StopWorkload
	(*WorkloadStopped)(nil),       // 5: agents.WorkloadStopped
	(*QueryWorkloads)(nil),        // 6: agents.QueryWorkloads
	(*WorkloadList)(nil),          // 7: agents.WorkloadList
	(*GetNodeInfo)(nil),           // 8: agents.GetNodeInfo
	(*NodeInfo)(nil),              // 9: agents.NodeInfo
	(*WorkloadSummary)(nil),       // 10: agents.WorkloadSummary
	(*Halt)(nil),                  // 11: agents.Halt
	nil,                           // 12: agents.NodeInfo.TagsEntry
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
}
var file_agents_proto_depIdxs = []int32{
	2,  // 0: agents.StartWorkload.host_service_config:type_name -> agents.HostServicesConfig
	10, // 1: agents.WorkloadList.workloads:type_name -> agents.WorkloadSummary
	12, // 2: agents.NodeInfo.tags:type_name -> agents.NodeInfo.TagsEntry
	10, // 3: agents.NodeInfo.workloads:type_name -> agents.WorkloadSummary
	13, // 4: agents.WorkloadSummary.started_at:type_name -> google.protobuf.Timestamp
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_agents_proto_init() }
func file_agents_proto_init() {
	if File_agents_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_agents_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_agents_proto_goTypes,
		DependencyIndexes: file_agents_proto_depIdxs,
		MessageInfos:      file_agents_proto_msgTypes,
	}.Build()
	File_agents_proto = out.File
	file_agents_proto_rawDesc = nil
	file_agents_proto_goTypes = nil
	file_agents_proto_depIdxs = nil
}
