// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package gen

import "encoding/json"
import "fmt"

type CloneWorkloadRequestJson struct {
	// StartWorkloadRequest corresponds to the JSON schema field
	// "start_workload_request".
	StartWorkloadRequest StartWorkloadRequestJson `json:"start_workload_request" yaml:"start_workload_request" mapstructure:"start_workload_request"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *CloneWorkloadRequestJson) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if _, ok := raw["start_workload_request"]; raw != nil && !ok {
		return fmt.Errorf("field start_workload_request in CloneWorkloadRequestJson: required")
	}
	type Plain CloneWorkloadRequestJson
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = CloneWorkloadRequestJson(plain)
	return nil
}

type CloneWorkloadResponseJson map[string]interface{}
